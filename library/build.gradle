/*
 * Copyright (c) 2017. Jahir Fiquitiva
 *
 * Licensed under the CreativeCommons Attribution-ShareAlike
 * 4.0 International License. You may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *    http://creativecommons.org/licenses/by-sa/4.0/legalcode
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

ext {
    TARGET_SDK = 25
    BUILD_TOOLS = "25.0.2"
    ANDROID_SUPPORT_LIBS = "25.1.1"
}

android {
    compileSdkVersion TARGET_SDK
    buildToolsVersion BUILD_TOOLS

    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion TARGET_SDK
        versionCode 1
        versionName "0.0.1"
        vectorDrawables.useSupportLibrary = true
        consumerProguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res/drawable',
                    'src/main/res/drawable/heart-animation',
            ]
        }
    }

    buildTypes {
        release {
            debuggable false
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

// apply from: 'fat-aar.gradle'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$ANDROID_SUPPORT_LIBS"
    compile "com.android.support:support-v4:$ANDROID_SUPPORT_LIBS"
    compile "com.android.support:design:$ANDROID_SUPPORT_LIBS"
    compile "com.android.support:recyclerview-v7:$ANDROID_SUPPORT_LIBS"
    compile "com.android.support:cardview-v7:$ANDROID_SUPPORT_LIBS"
    compile "com.android.support:palette-v7:$ANDROID_SUPPORT_LIBS"
    // Dialogs
    compile 'com.afollestad.material-dialogs:core:0.9.3.0'
    //OkHttp
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    //Glide Library - Image Loading Lib
    compile 'com.github.bumptech.glide:glide:3.7.0'
    //RecyclerView Fast Scroller
    compile 'com.github.pluscubed:recycler-fast-scroll:0.3.2@aar'
    //Circular Image View
    compile 'de.hdodenhof:circleimageview:2.1.0'
    //Muzei API
    //noinspection GradleDynamicVersion
    compile 'com.google.android.apps.muzei:muzei-api:2.0'
    //License Checker Lib
    compile 'com.github.javiersantos:PiracyChecker:0.0.3'
    // embedded project(':repmax')
    // Database
    compile 'com.afollestad:inquiry:5.0.0'
    // Donations Lib
    compile 'org.sufficientlysecure:donations:2.5'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// uncomment to build a jar file in addition to the default aar file
//android.libraryVariants.all { variant ->
//    def name = variant.buildType.name
//    def task = project.tasks.create "jar${name.capitalize()}", Jar
//    task.dependsOn variant.javaCompile
//    task.from variant.javaCompile.destinationDir
//    artifacts.add('archives', task);
//}